/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import assignment.Admin;
import assignment.BoughtItem;
import assignment.Item;
import assignment.MyReader;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;

/**
 *
 * @author xxhackerxx
 */
public class AdminViewAllTransactions extends javax.swing.JFrame {

    private Admin admin;

    /**
     * Creates new form ViewSoldItems
     *
     * @param seller
     */
    public AdminViewAllTransactions(Admin admin) {
        initComponents();
        this.admin = admin;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SoldItems = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Trading System");
        setLocation(new java.awt.Point(380, 180));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(SoldItems);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(254, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ArrayList<Item> items = admin.viewItemsOnSale();
        SoldItems.setText("<html>"+"************************************************************************************<br><center>Items On Sale</center><br>************************************************************************************<br>");
        int counter = 0;
        for (Item item : items) {
            counter++;
            SoldItems.setText(SoldItems.getText() +"Item No: " + counter +"<br>"+ "Item title: " + item.getItemTitle() + "<br>" + " Item Describtion: " + item.getItemDescribtion() + "<br>" + " Item Price: " + "RM " + item.getItemPrice() + "<br>" + " Item Category: " + item.getItemCategory() + "<br>" + " Method of delivery: " + item.getMethodOfDelivery() + "<br>" + " Seller Name: "+ MyReader
                    .getSellerNameById(String.valueOf(item.getSellerId()))+"<br>" + " =================================================" + "<br>");
        }
        SoldItems.setText(SoldItems.getText() +"************************************************************************************<br><center>Items Sold Already</center><br>************************************************************************************<br>");
        viewSoldItems();
        SoldItems.setText(SoldItems.getText() + "</html>");


    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AdminFrame a = new AdminFrame(admin);
        this.setVisible(false);
        a.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    
public String viewSoldItems() {
        ArrayList<BoughtItem> items = MyReader.getPurchasedItems();
        String line = null;
        int counter=0;
        for(BoughtItem item: items)
        {
            counter++;
                SoldItems.setText(SoldItems.getText()+"Item No: " + counter + "<br>"+ "Item title: " + item.getItemTitle() + "<br>" + " Item Describtion: " + item.getItemDescribtion() + "<br>" + " Item Price: " + "RM " + item.getItemPrice() + "<br>" + " Item Category: " + item.getItemCategory() + "<br>" + " Method of delivery: " + item.getMethodOfDelivery() + "<br>" + "Seller Name: "+ MyReader
                    .getSellerNameById(String.valueOf(item.getSellerId())) +"<br>"+ " Buyer Name: "+ MyReader.getBuyerNameById(String.valueOf(item.getBuyerId())) +"<br>" + " =================================================" + "<br>");
                
                

            

        }
        return null;
    }
   
//public String viewSoldItems() {
//        ArrayList<Item> items = new ArrayList<Item>();
//        String line = null;
//        int counter=0;
//        try {
//            BufferedReader br = new BufferedReader(new FileReader("PurchasedItems.txt"));
//            while ((line = br.readLine()) != null) {
//                
//                String[] parts = line.split("-");
//                counter++;
//                SoldItems.setText(SoldItems.getText()+"Item No: " + counter + "<br>"+ "Item title: " + parts[2] + "<br>" + " Item Describtion: " + parts[3] + "<br>" + " Item Price: " + "RM " + parts[4] + "<br>" + " Item Category: " + parts[5] + "<br>" + " Method of delivery: " + parts[6] + "<br>" + " Seller Name: "+ MyReader
//                    .getSellerNameById(String.valueOf(parts[8])) +"<br>"+ " Buyer Name: "+ MyReader.getBuyerNameById(String.valueOf(parts[0])) +"<br>" + " =================================================" + "<br>");
//                
//                }
//
//            
//
//        }catch (Exception e) {
//            System.out.println("ERORR");
//        }
//        return null;
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SoldItems;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
